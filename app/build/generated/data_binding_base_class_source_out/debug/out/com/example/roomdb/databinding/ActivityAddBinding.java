// Generated by view binder compiler. Do not edit!
package com.example.roomdb.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import android.widget.TimePicker;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.roomdb.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnAdd;

  @NonNull
  public final Button btnCancel;

  @NonNull
  public final Button btnDelete;

  @NonNull
  public final RadioButton btnHighAdd;

  @NonNull
  public final RadioButton btnHighUpdate;

  @NonNull
  public final RadioButton btnLowAdd;

  @NonNull
  public final RadioButton btnLowUpdate;

  @NonNull
  public final RadioButton btnMediumAdd;

  @NonNull
  public final RadioButton btnMediumUpdate;

  @NonNull
  public final Button btnOk;

  @NonNull
  public final Button btnUpdate;

  @NonNull
  public final ConstraintLayout clAddUpp;

  @NonNull
  public final ConstraintLayout constraintLayoutAdd;

  @NonNull
  public final ConstraintLayout constraintLayoutUpdate;

  @NonNull
  public final RadioGroup rdbtnPriorityAdd;

  @NonNull
  public final RadioGroup rdbtnPriorityUpdate;

  @NonNull
  public final TimePicker timePicker;

  @NonNull
  public final EditText tvDescAddUp;

  @NonNull
  public final EditText tvDescUpdate;

  @NonNull
  public final EditText tvTaskAddUp;

  @NonNull
  public final EditText tvTaskUpdate;

  @NonNull
  public final TextView tvTimeAdd;

  @NonNull
  public final TextView tvTimeUpdate;

  @NonNull
  public final TextView tvtitleAdd;

  @NonNull
  public final TextView tvtitleUpdate;

  private ActivityAddBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnAdd,
      @NonNull Button btnCancel, @NonNull Button btnDelete, @NonNull RadioButton btnHighAdd,
      @NonNull RadioButton btnHighUpdate, @NonNull RadioButton btnLowAdd,
      @NonNull RadioButton btnLowUpdate, @NonNull RadioButton btnMediumAdd,
      @NonNull RadioButton btnMediumUpdate, @NonNull Button btnOk, @NonNull Button btnUpdate,
      @NonNull ConstraintLayout clAddUpp, @NonNull ConstraintLayout constraintLayoutAdd,
      @NonNull ConstraintLayout constraintLayoutUpdate, @NonNull RadioGroup rdbtnPriorityAdd,
      @NonNull RadioGroup rdbtnPriorityUpdate, @NonNull TimePicker timePicker,
      @NonNull EditText tvDescAddUp, @NonNull EditText tvDescUpdate, @NonNull EditText tvTaskAddUp,
      @NonNull EditText tvTaskUpdate, @NonNull TextView tvTimeAdd, @NonNull TextView tvTimeUpdate,
      @NonNull TextView tvtitleAdd, @NonNull TextView tvtitleUpdate) {
    this.rootView = rootView;
    this.btnAdd = btnAdd;
    this.btnCancel = btnCancel;
    this.btnDelete = btnDelete;
    this.btnHighAdd = btnHighAdd;
    this.btnHighUpdate = btnHighUpdate;
    this.btnLowAdd = btnLowAdd;
    this.btnLowUpdate = btnLowUpdate;
    this.btnMediumAdd = btnMediumAdd;
    this.btnMediumUpdate = btnMediumUpdate;
    this.btnOk = btnOk;
    this.btnUpdate = btnUpdate;
    this.clAddUpp = clAddUpp;
    this.constraintLayoutAdd = constraintLayoutAdd;
    this.constraintLayoutUpdate = constraintLayoutUpdate;
    this.rdbtnPriorityAdd = rdbtnPriorityAdd;
    this.rdbtnPriorityUpdate = rdbtnPriorityUpdate;
    this.timePicker = timePicker;
    this.tvDescAddUp = tvDescAddUp;
    this.tvDescUpdate = tvDescUpdate;
    this.tvTaskAddUp = tvTaskAddUp;
    this.tvTaskUpdate = tvTaskUpdate;
    this.tvTimeAdd = tvTimeAdd;
    this.tvTimeUpdate = tvTimeUpdate;
    this.tvtitleAdd = tvtitleAdd;
    this.tvtitleUpdate = tvtitleUpdate;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAdd;
      Button btnAdd = ViewBindings.findChildViewById(rootView, id);
      if (btnAdd == null) {
        break missingId;
      }

      id = R.id.btnCancel;
      Button btnCancel = ViewBindings.findChildViewById(rootView, id);
      if (btnCancel == null) {
        break missingId;
      }

      id = R.id.btnDelete;
      Button btnDelete = ViewBindings.findChildViewById(rootView, id);
      if (btnDelete == null) {
        break missingId;
      }

      id = R.id.btnHighAdd;
      RadioButton btnHighAdd = ViewBindings.findChildViewById(rootView, id);
      if (btnHighAdd == null) {
        break missingId;
      }

      id = R.id.btnHighUpdate;
      RadioButton btnHighUpdate = ViewBindings.findChildViewById(rootView, id);
      if (btnHighUpdate == null) {
        break missingId;
      }

      id = R.id.btnLowAdd;
      RadioButton btnLowAdd = ViewBindings.findChildViewById(rootView, id);
      if (btnLowAdd == null) {
        break missingId;
      }

      id = R.id.btnLowUpdate;
      RadioButton btnLowUpdate = ViewBindings.findChildViewById(rootView, id);
      if (btnLowUpdate == null) {
        break missingId;
      }

      id = R.id.btnMediumAdd;
      RadioButton btnMediumAdd = ViewBindings.findChildViewById(rootView, id);
      if (btnMediumAdd == null) {
        break missingId;
      }

      id = R.id.btnMediumUpdate;
      RadioButton btnMediumUpdate = ViewBindings.findChildViewById(rootView, id);
      if (btnMediumUpdate == null) {
        break missingId;
      }

      id = R.id.btnOk;
      Button btnOk = ViewBindings.findChildViewById(rootView, id);
      if (btnOk == null) {
        break missingId;
      }

      id = R.id.btnUpdate;
      Button btnUpdate = ViewBindings.findChildViewById(rootView, id);
      if (btnUpdate == null) {
        break missingId;
      }

      ConstraintLayout clAddUpp = (ConstraintLayout) rootView;

      id = R.id.constraintLayoutAdd;
      ConstraintLayout constraintLayoutAdd = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayoutAdd == null) {
        break missingId;
      }

      id = R.id.constraintLayoutUpdate;
      ConstraintLayout constraintLayoutUpdate = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayoutUpdate == null) {
        break missingId;
      }

      id = R.id.rdbtnPriorityAdd;
      RadioGroup rdbtnPriorityAdd = ViewBindings.findChildViewById(rootView, id);
      if (rdbtnPriorityAdd == null) {
        break missingId;
      }

      id = R.id.rdbtnPriorityUpdate;
      RadioGroup rdbtnPriorityUpdate = ViewBindings.findChildViewById(rootView, id);
      if (rdbtnPriorityUpdate == null) {
        break missingId;
      }

      id = R.id.timePicker;
      TimePicker timePicker = ViewBindings.findChildViewById(rootView, id);
      if (timePicker == null) {
        break missingId;
      }

      id = R.id.tvDescAddUp;
      EditText tvDescAddUp = ViewBindings.findChildViewById(rootView, id);
      if (tvDescAddUp == null) {
        break missingId;
      }

      id = R.id.tvDescUpdate;
      EditText tvDescUpdate = ViewBindings.findChildViewById(rootView, id);
      if (tvDescUpdate == null) {
        break missingId;
      }

      id = R.id.tvTaskAddUp;
      EditText tvTaskAddUp = ViewBindings.findChildViewById(rootView, id);
      if (tvTaskAddUp == null) {
        break missingId;
      }

      id = R.id.tvTaskUpdate;
      EditText tvTaskUpdate = ViewBindings.findChildViewById(rootView, id);
      if (tvTaskUpdate == null) {
        break missingId;
      }

      id = R.id.tvTimeAdd;
      TextView tvTimeAdd = ViewBindings.findChildViewById(rootView, id);
      if (tvTimeAdd == null) {
        break missingId;
      }

      id = R.id.tvTimeUpdate;
      TextView tvTimeUpdate = ViewBindings.findChildViewById(rootView, id);
      if (tvTimeUpdate == null) {
        break missingId;
      }

      id = R.id.tvtitleAdd;
      TextView tvtitleAdd = ViewBindings.findChildViewById(rootView, id);
      if (tvtitleAdd == null) {
        break missingId;
      }

      id = R.id.tvtitleUpdate;
      TextView tvtitleUpdate = ViewBindings.findChildViewById(rootView, id);
      if (tvtitleUpdate == null) {
        break missingId;
      }

      return new ActivityAddBinding((ConstraintLayout) rootView, btnAdd, btnCancel, btnDelete,
          btnHighAdd, btnHighUpdate, btnLowAdd, btnLowUpdate, btnMediumAdd, btnMediumUpdate, btnOk,
          btnUpdate, clAddUpp, constraintLayoutAdd, constraintLayoutUpdate, rdbtnPriorityAdd,
          rdbtnPriorityUpdate, timePicker, tvDescAddUp, tvDescUpdate, tvTaskAddUp, tvTaskUpdate,
          tvTimeAdd, tvTimeUpdate, tvtitleAdd, tvtitleUpdate);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
