// Generated by Dagger (https://dagger.dev).
package com.example.roomdb.di;

import android.content.Context;
import com.example.roomdb.database.ToDoListRoomDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DiModule_ProvideAppDatabaseFactory implements Factory<ToDoListRoomDatabase> {
  private final DiModule module;

  private final Provider<Context> appContextProvider;

  public DiModule_ProvideAppDatabaseFactory(DiModule module, Provider<Context> appContextProvider) {
    this.module = module;
    this.appContextProvider = appContextProvider;
  }

  @Override
  public ToDoListRoomDatabase get() {
    return provideAppDatabase(module, appContextProvider.get());
  }

  public static DiModule_ProvideAppDatabaseFactory create(DiModule module,
      Provider<Context> appContextProvider) {
    return new DiModule_ProvideAppDatabaseFactory(module, appContextProvider);
  }

  public static ToDoListRoomDatabase provideAppDatabase(DiModule instance, Context appContext) {
    return Preconditions.checkNotNullFromProvides(instance.provideAppDatabase(appContext));
  }
}
