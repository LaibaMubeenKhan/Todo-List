// Generated by Dagger (https://dagger.dev).
package com.example.roomdb.di;

import com.example.roomdb.database.ToDoListRoomDatabase;
import com.example.roomdb.interfaces.ToDoListDao;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DiModule_ProvidesToDoListDaoFactory implements Factory<ToDoListDao> {
  private final DiModule module;

  private final Provider<ToDoListRoomDatabase> toDoListRoomDatabaseProvider;

  public DiModule_ProvidesToDoListDaoFactory(DiModule module,
      Provider<ToDoListRoomDatabase> toDoListRoomDatabaseProvider) {
    this.module = module;
    this.toDoListRoomDatabaseProvider = toDoListRoomDatabaseProvider;
  }

  @Override
  public ToDoListDao get() {
    return providesToDoListDao(module, toDoListRoomDatabaseProvider.get());
  }

  public static DiModule_ProvidesToDoListDaoFactory create(DiModule module,
      Provider<ToDoListRoomDatabase> toDoListRoomDatabaseProvider) {
    return new DiModule_ProvidesToDoListDaoFactory(module, toDoListRoomDatabaseProvider);
  }

  public static ToDoListDao providesToDoListDao(DiModule instance,
      ToDoListRoomDatabase toDoListRoomDatabase) {
    return Preconditions.checkNotNullFromProvides(instance.providesToDoListDao(toDoListRoomDatabase));
  }
}
