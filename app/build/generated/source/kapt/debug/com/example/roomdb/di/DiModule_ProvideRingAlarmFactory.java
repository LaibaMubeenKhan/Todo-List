// Generated by Dagger (https://dagger.dev).
package com.example.roomdb.di;

import android.content.Context;
import com.example.roomdb.singleton.RingAlarm;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DiModule_ProvideRingAlarmFactory implements Factory<RingAlarm> {
  private final DiModule module;

  private final Provider<Context> appContextProvider;

  public DiModule_ProvideRingAlarmFactory(DiModule module, Provider<Context> appContextProvider) {
    this.module = module;
    this.appContextProvider = appContextProvider;
  }

  @Override
  public RingAlarm get() {
    return provideRingAlarm(module, appContextProvider.get());
  }

  public static DiModule_ProvideRingAlarmFactory create(DiModule module,
      Provider<Context> appContextProvider) {
    return new DiModule_ProvideRingAlarmFactory(module, appContextProvider);
  }

  public static RingAlarm provideRingAlarm(DiModule instance, Context appContext) {
    return Preconditions.checkNotNullFromProvides(instance.provideRingAlarm(appContext));
  }
}
