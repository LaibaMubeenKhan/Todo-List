// Generated by Dagger (https://dagger.dev).
package com.example.roomdb.di;

import com.example.roomdb.interfaces.ToDoListDao;
import com.example.roomdb.repository.ToDoListRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DiModule_ProvideRepoFactory implements Factory<ToDoListRepository> {
  private final DiModule module;

  private final Provider<ToDoListDao> toDoListDaoProvider;

  public DiModule_ProvideRepoFactory(DiModule module, Provider<ToDoListDao> toDoListDaoProvider) {
    this.module = module;
    this.toDoListDaoProvider = toDoListDaoProvider;
  }

  @Override
  public ToDoListRepository get() {
    return provideRepo(module, toDoListDaoProvider.get());
  }

  public static DiModule_ProvideRepoFactory create(DiModule module,
      Provider<ToDoListDao> toDoListDaoProvider) {
    return new DiModule_ProvideRepoFactory(module, toDoListDaoProvider);
  }

  public static ToDoListRepository provideRepo(DiModule instance, ToDoListDao toDoListDao) {
    return Preconditions.checkNotNullFromProvides(instance.provideRepo(toDoListDao));
  }
}
